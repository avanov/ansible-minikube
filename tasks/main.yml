---
- name: Create Minikube directory structure
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ minikube_installation_path_prefix }}"
    - "{{ minikube_installation_path_prefix }}/bin"
    - "{{ minikube_helm_chart_configs_prefix }}"


- include: Darwin.yml
  when: ansible_os_family == "Darwin"


- name: Add activation scripts
  template:
    src: "{{ item.template }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items:
    - template: minikube_activate.sh.j2
      dest: "{{ minikube_installation_path_prefix }}/bin/minikube_activate"
      mode: "0755"
    - template: minikube_discovery.sh.j2
      dest: "{{ minikube_discovery_script_path }}"
      mode: "0644"

- name: "Add Minikube discovery line to {{ minikube_add_to_path_in }}"
  lineinfile:
    dest: "{{ minikube_add_to_path_in }}"
    regexp: '.+/minikube_discovery\.sh$'
    line: "source {{ minikube_discovery_script_path }}"
    state: present
    create: yes
  when: minikube_add_to_path

- name: "Activate Minikube"
  command: "{{ minikube_installation_path_prefix }}/bin/minikube_activate"

- name: Wait until Minikube activation is confirmed
  command: "{{ minikube_installation_path_prefix }}/bin/minikube dashboard --url"
  register: result
  until: "result.rc == 0 and result.stdout.startswith('http://')"
  retries: 5
  delay: 5

- name: Initialize Helm
  command: helm init --upgrade --replicas 1 --kube-context minikube

- name: Add Helm repositories
  command: "helm repo add {{ item }} --kube-context minikube"
  with_items: "jupyterhub https://jupyterhub.github.io/helm-chart/"

- name: Update Helm repositories
  command: helm repo update --kube-context minikube

- name: Add Helm chart configs
  template:
    src: "helm_configs/{{ item }}.j2"
    dest: "{{ minikube_helm_chart_configs_prefix }}/{{ item }}"
    mode: "0644"
  with_items:
    - postgresql.yml
    - redis.yml
    - rabbitmq.yml

- name: Install Helm charts into Minikube
  command: >
    helm install {{ item.chart }}
      --name={{ item.release_name }}
      --version={{ item.chart_version }}
      --namespace={{ item.namespace }}
      -f {{ minikube_helm_chart_configs_prefix }}/{{ item.chart_config }}
      --kube-context minikube
      --tiller-namespace kube-system
  with_items:
    - chart: stable/postgresql
      chart_version: "0.13.0"
      chart_config: postgresql.yml
      release_name: postgresql
      namespace: ns-1

    - chart: stable/redis
      chart_version: "3.3.2"
      chart_config: redis.yml
      release_name: redis
      namespace: ns-1

    - chart: stable/rabbitmq
      chart_version: "1.1.3"
      chart_config: rabbitmq.yml
      release_name: rabbitmq
      namespace: ns-1
  # atm, helm upgrade --install fails to perform idempotent operations
  # https://github.com/kubernetes/helm/issues/3353
  # We allow this task to fail, because the helm install command fails
  # when there's a pod with the same release name installed already.
  # Other errors should be handled with the failed_when statement
  register: result
  until: "result.rc == 1 and result.stderr.startswith('Error: a release named')"
  failed_when: "result.rc == 1 and 'Error: a release named' not in result.stderr"
  retries: 5
  delay: 15
